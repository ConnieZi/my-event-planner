# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules

# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

# This file now has 4 types, and 2 models. Models such as Room and Event are created as independent entities 
# in the database, and Tickets and Availability only exist as attribute members of a Room or Event. 

# this is a subpart of Room
type Availability {
  datetime_start: AWSDateTime
  datetime_end: AWSDateTime
}

# [] means a list
type Room @model @auth(rules: [{allow: private, operations: [read]}, {allow: groups, groups: ["admins"], operations: [read, create, update, delete]}]) 
{
  id: ID!
  name: String!
  capacity: Int!
  availability: [Availability]
}

type Ticket {
  student_id: String!
}

type Event @model
           @auth(rules: [{allow: private, operations: [create, read]}, {allow: groups, groups: ["admins"], operations: [read, create, update, delete]}, {allow: owner}])
 {           
  id: ID! 
  name: String! 
  description: String
  event_owner: String!
  room_id: String!
  image_file_name: String
  event_datetime_start: AWSDateTime! 
  event_datetime_end: AWSDateTime!
  event_duration: Int!
  total_tickets: Int!
  tickets: [Ticket!]
}

type Query {
    findSuitableRooms(max_tickets: Int, start_datetime: AWSDateTime, end_datetime: AWSDateTime): String @function(name:"FindSuitableRooms-${env}")
}



import{__rest as e}from"tslib";import{Storage as t}from"aws-amplify";import{translate as l}from"../../../../i18n/translations.mjs";function r(l){var{file:r,fileName:a,level:o="private",progressCallback:s,errorCallback:i,completeCallback:n,isResumable:c=!1}=l,p=e(l,["file","fileName","level","progressCallback","errorCallback","completeCallback","isResumable"]);const b=r.type||"binary/octet-stream";return!0===c?t.put(a,r,Object.assign({level:o,resumable:c,progressCallback:s,errorCallback:i,completeCallback:n,contentType:b},p)):t.put(a,r,Object.assign({level:o,resumable:!1,progressCallback:s,contentType:b},p)).then(n,i)}function a(e,t=!1,l=1){const r=t?1e3:1024;if(Math.abs(e)<r)return e+" B";const a=t?["kB","MB","GB","TB","PB","EB","ZB","YB"]:["KiB","MiB","GiB","TiB","PiB","EiB","ZiB","YiB"];let o=-1;const s=Math.pow(10,l);do{e/=r,++o}while(Math.round(Math.abs(e)*s)/s>=r&&o<a.length-1);return e.toFixed(l)+" "+a[o]}const o=(e,t)=>e&&t.size>e?l("File size must be below ")+a(e,!0):null,s=(e,t)=>e.filter((e=>{const l=e.name||"",r=(e.type||"").toLowerCase(),a=r.replace(/\/.*$/,"");return t.some((e=>{const t=e.trim().toLowerCase();return"."===t.charAt(0)?l.toLowerCase().endsWith(t):t.endsWith("/*")?a===t.replace(/\/.*$/,""):r===t}))})),i=(e,t)=>{const l=e.split(".").pop();return t.split(".").pop()===l};export{o as checkMaxSize,a as humanFileSize,i as isValidExtension,s as returnAcceptedFiles,r as uploadFile};
